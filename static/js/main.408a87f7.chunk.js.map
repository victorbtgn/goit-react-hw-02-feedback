{"version":3,"sources":["components/Container/Container.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["Container","children","className","Feedback","state","good","props","initialGood","neutral","initialNeutral","bad","initialBad","goodIncrement","setState","prevState","neutralIncrement","badIncrement","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","type","onClick","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAKeA,G,YAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,aAAaD,K,4BCA1DE,G,kNAOJC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,YACjBC,QAAS,EAAKF,MAAMG,eACpBC,IAAK,EAAKJ,MAAMK,Y,EAGlBC,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BT,KAAMS,EAAUT,KAAO,O,EAI3BU,iBAAmB,WACjB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BN,QAASM,EAAUN,QAAU,O,EAIjCQ,aAAe,WACb,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,IAAKI,EAAUJ,IAAM,O,EAIzBO,mBAAqB,WAAO,IAAD,EACM,EAAKb,MACpC,OAFyB,EACjBC,KADiB,EACXG,QADW,EACFE,K,EAIzBQ,gCAAkC,WAChC,OAAOC,KAAKC,KAAM,EAAKhB,MAAMC,KAAO,EAAKY,qBAAwB,M,uDAGzD,IAAD,EACwBI,KAAKjB,MAA5BC,EADD,EACCA,KAAMG,EADP,EACOA,QAASE,EADhB,EACgBA,IAEvB,OACE,yBAAKR,UAAU,YACb,wBAAIA,UAAU,kBAAd,yBACA,4BACEA,UAAU,eACVoB,KAAK,SACLC,QAASF,KAAKT,eAHhB,QAOA,4BACEV,UAAU,eACVoB,KAAK,SACLC,QAASF,KAAKN,kBAHhB,WAOA,4BACEb,UAAU,eACVoB,KAAK,SACLC,QAASF,KAAKL,cAHhB,OAOA,wBAAId,UAAU,kBAAd,cACA,0BAAMA,UAAU,iBAAhB,SAAuCG,GACvC,0BAAMH,UAAU,iBAAhB,YAA0CM,GAC1C,0BAAMN,UAAU,iBAAhB,QAAsCQ,GACtC,0BAAMR,UAAU,iBAAhB,UACUmB,KAAKJ,sBAEdI,KAAKH,kCAAoC,GACxC,0BAAMhB,UAAU,iBAAhB,sBACsBmB,KAAKH,kCAD3B,U,GA3EaM,cAAjBrB,EACGsB,aAAe,CACpBlB,YAAa,EACbE,eAAgB,EAChBE,WAAY,GAgFDR,QC5EAuB,EANH,kBACV,kBAAC,EAAD,KACE,kBAAC,EAAD,QCFJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.408a87f7.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","import React, { Component } from 'react';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  goodIncrement = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  neutralIncrement = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  badIncrement = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className=\"feedback\">\n        <h2 className=\"feedback-title\">Please leave feedback</h2>\n        <button\n          className=\"feedback-btn\"\n          type=\"button\"\n          onClick={this.goodIncrement}\n        >\n          Good\n        </button>\n        <button\n          className=\"feedback-btn\"\n          type=\"button\"\n          onClick={this.neutralIncrement}\n        >\n          Neutral\n        </button>\n        <button\n          className=\"feedback-btn\"\n          type=\"button\"\n          onClick={this.badIncrement}\n        >\n          Bad\n        </button>\n        <h3 className=\"feedback-title\">Statistics</h3>\n        <span className=\"feedback-text\">Good: {good}</span>\n        <span className=\"feedback-text\">Neutral: {neutral}</span>\n        <span className=\"feedback-text\">Bad: {bad}</span>\n        <span className=\"feedback-text\">\n          Total: {this.countTotalFeedback()}\n        </span>\n        {this.countPositiveFeedbackPercentage() > 0 && (\n          <span className=\"feedback-text\">\n            Positive feedback: {this.countPositiveFeedbackPercentage()}%\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Container from './components/Container';\n\nimport Feedback from './components/Feedback';\n\nconst App = () => (\n  <Container>\n    <Feedback />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}