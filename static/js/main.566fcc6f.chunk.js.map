{"version":3,"sources":["components/Container/Container.js","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/Section.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["Container","children","className","Statistics","options","total","positivePercentage","map","option","key","FeedbackOptions","onLeaveFeedback","name","type","onClick","charAt","toUpperCase","slice","Section","title","defaultProps","Notification","message","Feedback","state","good","props","initialGood","neutral","initialNeutral","bad","initialBad","handelFeedback","currentTarget","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","ceil","this","keys","entries","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAKeA,G,YAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,aAAaD,K,mCCsBjDE,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,mBAAnB,OACjB,oCACGF,EAAQG,KAAI,SAAAC,GACX,OACE,0BAAMC,IAAKD,EAAO,GAAIN,UAAU,QAC7BM,EAAO,GADV,KACgBA,EAAO,OAI3B,0BAAMN,UAAU,QAAhB,UAA+BG,GAC9BC,EAAqB,GACpB,0BAAMJ,UAAU,QAAhB,sBAA2CI,EAA3C,OCOSI,EAlBS,SAAC,GAAD,IAAGN,EAAH,EAAGA,QAASO,EAAZ,EAAYA,gBAAZ,OACtBP,EAAQG,KAAI,SAAAC,GAAM,OAChB,4BACEC,IAAKD,EACLI,KAAMJ,EACNN,UAAU,MACVW,KAAK,SACLC,QAASH,GAERH,EAAOO,OAAO,GAAGC,cAAgBR,EAAOS,MAAM,QCT/CC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOlB,EAAV,EAAUA,SAAV,OACd,oCACGkB,GAAS,wBAAIjB,UAAU,SAASiB,GAEjC,iCAAUlB,KAIdiB,EAAQE,aAAe,CACrBD,MAAO,IAOMD,QCVAG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAKA,ICIrCC,G,kNAOJC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,YACjBC,QAAS,EAAKF,MAAMG,eACpBC,IAAK,EAAKJ,MAAMK,Y,EAGlBC,eAAiB,YAAkC,IAAdpB,EAAa,EAA9BqB,cAAiBrB,KACnC,EAAKsB,UAAS,SAAAC,GAAS,sBACpBvB,EAAOuB,EAAUvB,GAAQ,O,EAI9BwB,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKd,OAAOe,QAAO,SAACC,EAAKC,GAErC,OADAD,GAAOC,IAEN,I,EAELC,gCAAkC,WAChC,OAAOC,KAAKC,KAAM,EAAKpB,MAAMC,KAAO,EAAKW,qBAAwB,M,uDAIjE,IAAM/B,EAAQwC,KAAKT,qBACb9B,EAAqBuC,KAAKH,kCAEhC,OACE,yBAAKxC,UAAU,YACb,kBAAC,EAAD,CAASiB,MAAM,yBACb,kBAAC,EAAD,CACEf,QAASiC,OAAOS,KAAKD,KAAKrB,OAC1Bb,gBAAiBkC,KAAKb,kBAI1B,kBAAC,EAAD,CAASb,MAAM,cACZd,EAAQ,EACP,kBAAC,EAAD,CACED,QAASiC,OAAOU,QAAQF,KAAKrB,OAC7BnB,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcgB,QAAQ,4B,GAlDX0B,cAAjBzB,EACGH,aAAe,CACpBO,YAAa,EACbE,eAAgB,EAChBE,WAAY,GAsDDR,QCtDA0B,EANH,kBACV,kBAAC,EAAD,KACE,kBAAC,EAAD,QCFJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.566fcc6f.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ options, total, positivePercentage }) => (\n  <>\n    {options.map(option => {\n      return (\n        <span key={option[0]} className=\"text\">\n          {option[0]}: {option[1]}\n        </span>\n      );\n    })}\n    <span className=\"text\">Total: {total}</span>\n    {positivePercentage > 0 && (\n      <span className=\"text\">Positive feedback: {positivePercentage}%</span>\n    )}\n  </>\n);\n\nStatistics.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.array),\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map(option => (\n    <button\n      key={option}\n      name={option}\n      className=\"btn\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      {option.charAt(0).toUpperCase() + option.slice(1)}\n    </button>\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n    {title && <h2 className=\"title\">{title}</h2>}\n\n    <section>{children}</section>\n  </>\n);\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <h3>{message}</h3>;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  handelFeedback = ({ currentTarget: { name } }) => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, item) => {\n      acc += item;\n      return acc;\n    }, 0);\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handelFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              options={Object.entries(this.state)}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Container from './components/Container';\n\nimport Feedback from './components/Feedback';\n\nconst App = () => (\n  <Container>\n    <Feedback />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}