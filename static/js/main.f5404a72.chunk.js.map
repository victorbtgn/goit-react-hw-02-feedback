{"version":3,"sources":["components/Container/Container.js","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/Section.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["Container","children","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","name","type","onClick","Section","title","Notification","message","Feedback","state","props","initialGood","initialNeutral","initialBad","btnIncrement","evt","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAKeA,G,YAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,aAAaD,K,4BCajDE,G,MAdI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,0BAAMN,UAAU,iBAAhB,SAAuCE,GACvC,0BAAMF,UAAU,iBAAhB,YAA0CG,GAC1C,0BAAMH,UAAU,iBAAhB,QAAsCI,GACtC,0BAAMJ,UAAU,iBAAhB,UAAwCK,GACvCC,EAAqB,GACpB,0BAAMN,UAAU,iBAAhB,sBACsBM,EADtB,QCsBSC,EA7BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BACEC,KAAK,OACLT,UAAU,eACVU,KAAK,SACLC,QAASH,GAJX,QAQA,4BACEC,KAAK,UACLT,UAAU,eACVU,KAAK,SACLC,QAASH,GAJX,WAQA,4BACEC,KAAK,MACLT,UAAU,eACVU,KAAK,SACLC,QAASH,GAJX,SCVWI,EARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOd,EAAV,EAAUA,SAAV,OACd,oCACGc,GAAS,wBAAIb,UAAU,kBAAkBa,GAE1C,iCAAUd,KCFCe,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAKA,ICKrCC,E,4MAOJC,MAAQ,CACNf,KAAM,EAAKgB,MAAMC,YACjBhB,QAAS,EAAKe,MAAME,eACpBhB,IAAK,EAAKc,MAAMG,Y,EAGlBC,aAAe,SAAAC,GACW,SAApBA,EAAIC,OAAOf,MACb,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,KAAMwB,EAAUxB,KAAO,MAIH,YAApBqB,EAAIC,OAAOf,MACb,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,QAASuB,EAAUvB,QAAU,MAIT,QAApBoB,EAAIC,OAAOf,MACb,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,IAAKsB,EAAUtB,IAAM,O,EAK3BuB,mBAAqB,WAAO,IAAD,EACM,EAAKV,MACpC,OAFyB,EACjBf,KADiB,EACXC,QADW,EACFC,K,EAIzBwB,gCAAkC,WAChC,OAAOC,KAAKC,KAAM,EAAKb,MAAMf,KAAO,EAAKyB,qBAAwB,M,uDAGzD,IAAD,EACwBI,KAAKd,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ0B,KAAKJ,qBACbrB,EAAqByB,KAAKH,kCAEhC,OACE,yBAAK5B,UAAU,YACb,kBAAC,EAAD,CAASa,MAAM,yBACb,kBAAC,EAAD,CAAiBL,gBAAiBuB,KAAKT,gBAIzC,kBAAC,EAAD,CAAST,MAAM,cACZR,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcS,QAAQ,4B,GAhEXiB,aAAjBhB,EACGiB,aAAe,CACpBd,YAAa,EACbC,eAAgB,EAChBC,WAAY,GAoEDL,QCpEAkB,EANH,kBACV,kBAAC,EAAD,KACE,kBAAC,EAAD,QCFJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f5404a72.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <span className=\"feedback-text\">Good: {good}</span>\n    <span className=\"feedback-text\">Neutral: {neutral}</span>\n    <span className=\"feedback-text\">Bad: {bad}</span>\n    <span className=\"feedback-text\">Total: {total}</span>\n    {positivePercentage > 0 && (\n      <span className=\"feedback-text\">\n        Positive feedback: {positivePercentage}%\n      </span>\n    )}\n  </>\n);\n\nexport default Statistics;\n","import React from 'react';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <>\n    <button\n      name=\"good\"\n      className=\"feedback-btn\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      Good\n    </button>\n    <button\n      name=\"neutral\"\n      className=\"feedback-btn\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      Neutral\n    </button>\n    <button\n      name=\"bad\"\n      className=\"feedback-btn\"\n      type=\"button\"\n      onClick={onLeaveFeedback}\n    >\n      Bad\n    </button>\n  </>\n);\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <>\n    {title && <h2 className=\"feedback-title\">{title}</h2>}\n\n    <section>{children}</section>\n  </>\n);\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ message }) => <h3>{message}</h3>;\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './Feedback.css';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  btnIncrement = evt => {\n    if (evt.target.name === 'good') {\n      this.setState(prevState => ({\n        good: prevState.good + 1,\n      }));\n    }\n\n    if (evt.target.name === 'neutral') {\n      this.setState(prevState => ({\n        neutral: prevState.neutral + 1,\n      }));\n    }\n\n    if (evt.target.name === 'bad') {\n      this.setState(prevState => ({\n        bad: prevState.bad + 1,\n      }));\n    }\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"feedback\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.btnIncrement} />\n        </Section>\n        {/* options={} */}\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Container from './components/Container';\n\nimport Feedback from './components/Feedback';\n\nconst App = () => (\n  <Container>\n    <Feedback />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}